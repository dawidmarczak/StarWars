{"version":3,"sources":["Components/OnePlanet.js","Components/OnePlanetMobile.js","Components/OneFilm.js","Components/Main.js","Components/App.js","index.js"],"names":["OnePlanet","props","Table","Row","textAlign","HeaderCell","planet","name","rotationPeriod","orbitalPeriod","diameter","climates","length","map","climate","surfaceWater","population","OnePlanetMobile","Body","className","Cell","OneFilm","state","planets","sortDesc","componentDidMount","data","setState","handleClick","setNewIndex","film","id","sort","property","a","b","cliemates","Message","Accordion","Title","active","this","activeIndex","index","onClick","Icon","title","Content","isMobile","basic","padded","Header","Button","icon","filmConnection","films","some","React","Component","Main","newIndex","Container","size","Segment","App","fluid","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a40065b3.chunk.js","sourcesContent":["import React from 'react';\nimport '../Styles/App.css';\nimport {Table} from 'semantic-ui-react'\n\nconst OnePlanet = (props) => {\n  return (\n   <>\n        <Table.Row textAlign='center'>\n            <Table.HeaderCell>{props.planet.name != null ? props.planet.name : 'unknown'}</Table.HeaderCell>\n            <Table.HeaderCell>{props.planet.rotationPeriod != null ? props.planet.rotationPeriod : 'unknown'}</Table.HeaderCell>\n            <Table.HeaderCell>{props.planet.orbitalPeriod != null ? props.planet.orbitalPeriod : 'unknown'}</Table.HeaderCell>\n            <Table.HeaderCell>{props.planet.diameter != null ? props.planet.diameter : 'unknown'}</Table.HeaderCell>\n            <Table.HeaderCell>{props.planet.climates.length > 0 ? (props.planet.climates.map(climate => {return climate+\"  \"})) : 'unknown'} </Table.HeaderCell>\n            <Table.HeaderCell>{props.planet.surfaceWater !=null ? props.planet.surfaceWater : 'unknown'}</Table.HeaderCell>\n            <Table.HeaderCell>{props.planet.population != null ? props.planet.population : 'unknown'}</Table.HeaderCell>\n        </Table.Row> <br/>\n  </>\n  );\n}\n\nexport default OnePlanet;\n","import React from 'react';\nimport '../Styles/App.css';\nimport {Table} from 'semantic-ui-react'\n\nconst OnePlanetMobile = (props) => {\n  return (\n   <>\n\n   \n      <Table.Body className='back'>\n        <Table.Row textAlign='center'>\n            \n            <Table.Cell>Planet name</Table.Cell>\n            <Table.Cell>{props.planet.name != null ? props.planet.name : 'unknown'}</Table.Cell>\n\n        </Table.Row>\n\n        <Table.Row textAlign='center'>\n            \n             <Table.Cell>Rotation period</Table.Cell>\n             <Table.Cell>{props.planet.rotationPeriod != null ? props.planet.rotationPeriod : 'unknown'}</Table.Cell>\n            \n        </Table.Row>\n\n        <Table.Row textAlign='center'>\n\n             <Table.Cell>Orbital period</Table.Cell>\n             <Table.Cell>{props.planet.orbitalPeriod != null ? props.planet.orbitalPeriod : 'unknown'}</Table.Cell>\n            \n        </Table.Row>\n\n        <Table.Row textAlign='center'>\n            \n              <Table.Cell>Diameter</Table.Cell>\n              <Table.Cell>{props.planet.diameter != null ? props.planet.diameter : 'unknown'}</Table.Cell>\n            \n        </Table.Row>\n\n        <Table.Row textAlign='center'>\n            \n            <Table.Cell>Climate</Table.Cell>\n            <Table.Cell>{props.planet.climates.length > 0 ? (props.planet.climates.map(climate => {return climate+\"  \"})) : 'unknown'} </Table.Cell>\n            \n        </Table.Row>\n\n        <Table.Row textAlign='center'>\n            \n            <Table.Cell>Surface water</Table.Cell>\n            <Table.Cell>{props.planet.surfaceWater !=null ? props.planet.surfaceWater : 'unknown'}</Table.Cell>\n            \n        </Table.Row>\n\n        <Table.Row textAlign='center'>\n            \n             <Table.Cell>Population</Table.Cell>\n             <Table.Cell>{props.planet.population != null ? props.planet.population : 'unknown'}</Table.Cell>\n            \n        </Table.Row>\n        \n      </Table.Body>  <br/>\n    \n  </>\n  );\n}\n\nexport default OnePlanetMobile;\n","import React from 'react';\nimport '../Styles/App.css';\nimport {Icon, Accordion, Table, Message, Button, Tab} from 'semantic-ui-react'\nimport data from '../Assets/data.json'\nimport OnePlanet from './OnePlanet'\nimport {isMobile} from 'react-device-detect';\nimport OnePlanetMobile from './OnePlanetMobile'\n\nclass OneFilm extends React.Component{\n\nstate = {planets: [], sortDesc: false}\n\ncomponentDidMount = () => {\n    let planets = data.data.planets;\n\n    this.setState({\n        planets: planets\n    })\n}\n\n//Change index when selecting another movie\nhandleClick = () => {\n    this.props.setNewIndex(this.props.film.id)\n}\n\n//Sort function depending on the selected column. By default, the array is sorted in descending order.\nsort = (property) => {\n  \n    let planets = this.state.planets;\n\n    if(this.state.sortDesc === false) {\n\n    if(property ==='name') {\n        planets.sort(function(a, b){\n            if(a.name < b.name) { return -1; }\n            if(a.name > b.name) { return 1; }\n            return 0;\n        }) }\n\n    \n    if(property ==='rotationPeriod') {\n        planets.sort(function(a, b){\n            if(a.rotationPeriod < b.rotationPeriod) { return -1; }\n            if(a.rotationPeriod > b.rotationPeriod) { return 1; }\n            return 0;\n        }) }\n    \n    if(property ==='orbitalPeriod') {\n        planets.sort(function(a, b){\n            if(a.orbitalPeriod < b.orbitalPeriod) { return -1; }\n            if(a.orbitalPeriod > b.orbitalPeriod) { return 1; }\n            return 0;\n        }) }\n    \n    if(property ==='diameter') {\n        planets.sort(function(a, b){\n            if(a.diameter < b.diameter) { return -1; }\n            if(a.diameter > b.diameter) { return 1; }\n            return 0;\n        }) }\n\n    if(property ==='climates') {\n        planets.sort(function(a, b){\n            if(a.climates < b.climates) { return -1; }\n            if(a.climates > b.cliemates) { return 1; }\n            return 0;\n        }) }\n\n    if(property ==='surfaceWater') {\n        planets.sort(function(a, b){\n            if(a.surfaceWater < b.surfaceWater) { return -1; }\n            if(a.surfaceWater > b.surfaceWater) { return 1; }\n            return 0;\n        }) }\n    \n    if(property ==='population') {\n        planets.sort(function(a, b){\n            if(a.population < b.population) { return -1; }\n            if(a.population > b.population) { return 1; }\n            return 0;\n        }) }\n\n    this.setState({\n        sortDesc: true\n    })\n\n    } else {\n\n        if(property ==='name') {\n            planets.sort(function(a, b){\n                if(a.name < b.name) { return 1; }\n                if(a.name > b.name) { return -1; }\n                return 0;\n            }) }\n    \n        \n        if(property ==='rotationPeriod') {\n            planets.sort(function(a, b){\n                if(a.rotationPeriod < b.rotationPeriod) { return 1; }\n                if(a.rotationPeriod > b.rotationPeriod) { return -1; }\n                return 0;\n            }) }\n        \n        if(property ==='orbitalPeriod') {\n            planets.sort(function(a, b){\n                if(a.orbitalPeriod < b.orbitalPeriod) { return 1; }\n                if(a.orbitalPeriod > b.orbitalPeriod) { return -1; }\n                return 0;\n            }) }\n        \n        if(property ==='diameter') {\n            planets.sort(function(a, b){\n                if(a.diameter < b.diameter) { return 1; }\n                if(a.diameter > b.diameter) { return -1; }\n                return 0;\n            }) }\n    \n        if(property ==='climates') {\n            planets.sort(function(a, b){\n                if(a.climates < b.climates) { return 1; }\n                if(a.climates > b.cliemates) { return -1; }\n                return 0;\n            }) }\n    \n        if(property ==='surfaceWater') {\n            planets.sort(function(a, b){\n                if(a.surfaceWater < b.surfaceWater) { return 1; }\n                if(a.surfaceWater > b.surfaceWater) { return -1; }\n                return 0;\n            }) }\n        \n        if(property ==='population') {\n            planets.sort(function(a, b){\n                if(a.population < b.population) { return 1; }\n                if(a.population > b.population) { return -1; }\n                return 0;\n            }) }\n    \n        this.setState({\n            sortDesc: false\n        })\n    }\n        \n    this.setState({\n        planets: planets\n        \n    })\n}\n\nrender() {\n\n  return (\n   <>    \n    <Message className='width-90p purpleBack'>\n    <Accordion.Title active={this.props.activeIndex === this.props.film.id} index={this.props.film.id} onClick={this.handleClick} className='size-12' > \n        <Icon name='dropdown' />\n            {this.props.film.title}\n    </Accordion.Title>\n\n  <Accordion.Content active={this.props.activeIndex === this.props.film.id}>\n   \n{/*  Depending on whether mobile or computer. Using the react-device-detect library */}\n\n    {isMobile === false ? (\n\n   <Table basic='very' padded className='mt-2'>\n\n       <Table.Header>\n           <Table.Row textAlign='center'>\n               <Table.HeaderCell>Planet name <Button onClick={()=> this.sort(\"name\")} icon className='noBackground'><Icon name='sort' /> </Button></Table.HeaderCell>\n               <Table.HeaderCell>Rotation period <Button onClick={()=> this.sort(\"rotationPeriod\")} icon className='noBackground'><Icon name='sort' /> </Button></Table.HeaderCell>\n               <Table.HeaderCell>Orbital period <Button onClick={()=> this.sort(\"orbitalPeriod\")} icon className='noBackground'><Icon name='sort' /> </Button></Table.HeaderCell>\n               <Table.HeaderCell>Diameter <Button onClick={()=> this.sort(\"diameter\")} icon className='noBackground'><Icon name='sort' /> </Button></Table.HeaderCell>\n               <Table.HeaderCell>Climate <Button onClick={()=> this.sort(\"climates\")} icon className='noBackground'><Icon name='sort' /> </Button></Table.HeaderCell>\n               <Table.HeaderCell>Sufrace water <Button onClick={()=> this.sort(\"surfaceWater\")} icon className='noBackground'><Icon name='sort' /> </Button></Table.HeaderCell>\n               <Table.HeaderCell>Population <Button onClick={()=> this.sort(\"population\")} icon className='noBackground'><Icon name='sort' /> </Button></Table.HeaderCell>\n           </Table.Row>\n       </Table.Header>\n\n        <Table.Body>      \n            {this.state.planets.map(planet => {\n               if(planet.filmConnection.films.some(film => film.id === this.props.film.id)) {\n                   return <OnePlanet planet={planet} />\n               }\n            })}\n        </Table.Body>  \n     </Table>   \n    \n    ) : (\n\n        <Table basic='very' padded>\n            \n            {this.state.planets.map(planet => {\n               if(planet.filmConnection.films.some(film => film.id === this.props.film.id)) {\n                   return <OnePlanetMobile planet={planet} />\n               }\n            })}\n\n        </Table>\n\n    )}\n    \n  </Accordion.Content>\n  </Message>\n  </>\n  )};\n}\n\nexport default OneFilm;\n","import React from 'react';\nimport '../Styles/App.css';\nimport {Container, Header, Segment, Accordion} from 'semantic-ui-react'\nimport OneFilm from './OneFilm'\nimport data from '../Assets/data.json'\n\nclass Main extends React.Component {\n\n state = {activeIndex: -1}\n \n films = data.data.films;\n\n setNewIndex = (index) => {\n    \n    const activeIndex = this.state.activeIndex;\n    let newIndex = index;\n\n    if(newIndex === activeIndex) {\n       newIndex=-1;\n    }\n\n    this.setState({\n        activeIndex: newIndex\n    })\n }\n\n render() {\n\n  return (\n    <Container className='width50'>\n      \n         <Header textAlign='center' size='huge' className='up mt-2 mb-05 size-4'>Star Wars</Header>\n            <Header textAlign='center' size='big' className='up mt-0 size-2 planetColor'>Discover the encyclopedia of planets</Header>\n\n              <Segment className='purpleBack width90p'>\n\n                <Accordion>\n\n                {this.films.map(film => {\n                  \n                   return <OneFilm film={film} activeIndex={this.state.activeIndex} setNewIndex={this.setNewIndex} />\n                })}\n                \n                </Accordion>\n              </Segment>\n\n    </Container>\n  )};\n}\n\nexport default Main;\n","import React from 'react';\nimport '../Styles/App.css';\nimport {Container} from 'semantic-ui-react'\nimport Main from './Main'\n\nfunction App() {\n  return (\n    <Container fluid>\n        <Main />\n    </Container>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App'\nimport './Styles/App.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}